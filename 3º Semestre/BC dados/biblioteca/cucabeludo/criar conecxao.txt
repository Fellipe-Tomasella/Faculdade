/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package biblioteca.db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class CriarConexao {

    // ATUALIZE ESTES VALORES COM OS SEUS DADOS DO MYSQL
    private static final String URL_BIBLIOTECA = "jdbc:mysql://localhost:3306/projetofinal_biblioteca?zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=UTC";
    private static final String USER_BIBLIOTECA = "root"; // SEU USUÁRIO MYSQL
    private static final String PASSWORD_BIBLIOTECA = "123456"; // SUA SENHA MYSQL
    private static final String DRIVER_CLASS = "com.mysql.cj.jdbc.Driver";

    // Bloco estático para carregar o driver uma vez quando a classe é carregada
    static {
        try {
            Class.forName(DRIVER_CLASS);
        } catch (ClassNotFoundException e) {
            // Lançar uma exceção em tempo de execução se o driver não for encontrado
            // pois a aplicação não pode funcionar sem ele.
            throw new RuntimeException("Driver JDBC MySQL não encontrado no classpath!", e);
        }
    }

    public static Connection getConexao() throws SQLException {
        System.out.println("Tentando conectar ao banco de dados da biblioteca...");
        try {
            Connection conexao = DriverManager.getConnection(URL_BIBLIOTECA, USER_BIBLIOTECA, PASSWORD_BIBLIOTECA);
            System.out.println("Conexão com biblioteca_db estabelecida com sucesso!");
            return conexao;
        } catch (SQLException e) {
            System.err.println("Erro ao conectar ao banco de dados biblioteca_db: " + e.getMessage());
            System.err.println("SQLState: " + e.getSQLState());
            System.err.println("ErrorCode: " + e.getErrorCode());
            throw e; // Re-lança a exceção para ser tratada por quem chamou
        }
    }

    public static void fecharConexao(Connection conn) {
        if (conn != null) {
            try {
                if (!conn.isClosed()) {
                    conn.close();
                    System.out.println("Conexão com biblioteca_db fechada.");
                }
            } catch (SQLException e) {
                System.err.println("Erro ao fechar a conexão com biblioteca_db: " + e.getMessage());
            }
        }
    }

    // Teste simples de conexão (opcional, pode ser removido ou comentado)
    public static void main(String[] args) {
        try (Connection c = getConexao()) {
            System.out.println("Teste de conexão realizado com sucesso dentro de CriarConexao.");
        } catch (SQLException e) {
            // Erro já foi impresso no método getConexao
            System.err.println("Falha no teste de conexão dentro de CriarConexao.");
        }
    }
}